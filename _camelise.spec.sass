+describe("Camelise")
	+it("should discard excluded characters from the input string")
		+should( expect( camelise( "foo "  )), to( be( "Foo" )))
		+should( expect( camelise( " foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo-"  )), to( be( "Foo" )))
		+should( expect( camelise( "-foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo–"  )), to( be( "Foo" )))
		+should( expect( camelise( "–foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo—"  )), to( be( "Foo" )))
		+should( expect( camelise( "—foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo_"  )), to( be( "Foo" )))
		+should( expect( camelise( "_foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo,"  )), to( be( "Foo" )))
		+should( expect( camelise( ",foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo;"  )), to( be( "Foo" )))
		+should( expect( camelise( ";foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo:"  )), to( be( "Foo" )))
		+should( expect( camelise( ":foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo."  )), to( be( "Foo" )))
		+should( expect( camelise( ".foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo("  )), to( be( "Foo" )))
		+should( expect( camelise( "(foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo)"  )), to( be( "Foo" )))
		+should( expect( camelise( ")foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo["  )), to( be( "Foo" )))
		+should( expect( camelise( "[foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo]"  )), to( be( "Foo" )))
		+should( expect( camelise( "]foo"  )), to( be( "Foo" )))
		+should( expect( camelise( "foo'"  )), to( be( "Foo" )))
		+should( expect( camelise( "'foo"  )), to( be( "Foo" )))
		+should( expect( camelise( 'foo\"' )), to( be( "Foo" )))
		+should( expect( camelise( '"foo'  )), to( be( "Foo" )))

	+it("should output a string with the 1st character capitalised when lower is false")
		+should( expect( camelise( "foo"                )), to( be( "Foo" )))
		+should( expect( camelise( "Foo"                )), to( be( "Foo" )))
		+should( expect( camelise( "foo", false         )), to( be( "Foo" )))
		+should( expect( camelise( "Foo", false         )), to( be( "Foo" )))
		+should( expect( camelise( "foo", $lower: false )), to( be( "Foo" )))
		+should( expect( camelise( "Foo", $lower: false )), to( be( "Foo" )))

	+it("should output a string with the 1st character lowercased when lower is true")
		+should( expect( camelise( "Foo", true         )), to( be( "foo" )))
		+should( expect( camelise( "foo", true         )), to( be( "foo" )))
		+should( expect( camelise( "Foo", $lower: true )), to( be( "foo" )))
		+should( expect( camelise( "foo", $lower: true )), to( be( "foo" )))

	+it("should convert a string with multiple words to UpperCamelCase")
		+should( expect( camelise( "riker ipsum"                          )), to( be( "RikerIpsum"                      )))
		+should( expect( camelise( "belay that order"                     )), to( be( "BelayThatOrder"                  )))
		+should( expect( camelise( "I am not insane"                      )), to( be( "IAmNotInsane"                    )))
		+should( expect( camelise( "talk about going nowhere fast"        )), to( be( "TalkAboutGoingNowhereFast"       )))
		+should( expect( camelise( "the unexpected is our normal routine" )), to( be( "TheUnexpectedIsOurNormalRoutine" )))
		+should( expect( camelise( "take the ship into the neutral zone"  )), to( be( "TakeTheShipIntoTheNeutralZone"   )))

	+it("should be able to pass numbers through")
		+should( expect( camelise( "123"     )), to( be( "123"    )))
		+should( expect( camelise( "123 456" )), to( be( "123456" )))
